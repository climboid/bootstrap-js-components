#!/usr/bin/env node

var git = require('simple-git')
  async = require('async'),
  exec = require('child_process').exec,
  semver = require('semver');

var bootstrap = git(__dirname + '/../bootstrap');
var local = git(__dirname + '/..');

async.map([bootstrap, local], function(repo, callback) {
  repo
    .pull()
    .tags(function(err, tags) {
      callback(err, tags);
    });
}, function(err, results) {
  if (err) {
    console.error(err);
    return;
  }

  var bootstrapTags = results[0].all.sort(),
    localTags = results[1].all.sort(),
    tagsToUpdate = [];

  bootstrapTags.forEach(function(tag) {
    if (!tag || !semver.valid(tag) || semver.lt(tag, '2.0.3')) {
      return;
    }

    if (localTags.indexOf(tag) === -1) {
      tagsToUpdate.push(tag);
    }
  });

  async.mapSeries(tagsToUpdate, function(tag, callback) {
    console.log('>> Building ' + tag);
    bootstrap.checkout(tag, function(err) {
      exec('grunt', function(error, stdout, stderr) {
        local
          .checkoutBranch(tag, 'master')
          ._run('git add dist/. -f', function() {})
          .commit(tag)
          ._run('git tag -a ' + tag + ' -m "' + tag + '"', function() {})
          .checkout('master')
          ._run('git branch -D ' + tag, function(err) {
            callback(err, tag);
          });
      });
    });
  }, function(err, results) {
    if (err) {
      console.error(err);
      return;
    }

    console.log('>> Updated tags: ' + results.join(', '));
    console.log('\n\ngit push --tags\n\nto push to origin');

    bootstrap.checkout('master');
  });
});